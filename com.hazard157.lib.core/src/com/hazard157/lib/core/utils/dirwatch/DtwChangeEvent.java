package com.hazard157.lib.core.utils.dirwatch;

import static java.nio.file.StandardWatchEventKinds.*;

import java.io.*;
import java.nio.file.*;
import java.nio.file.WatchEvent.*;

import org.toxsoft.core.tslib.coll.helpers.*;
import org.toxsoft.core.tslib.utils.errors.*;

/**
 * File system change event generated by {@link DirTreeWatcher}.
 *
 * @author hazard157
 */
public final class DtwChangeEvent {

  private final File    fsObj;
  private final ECrudOp op;

  /**
   * Constructor.
   *
   * @param aPath {@link Path} - changed filesystem object
   * @param aKind {@link Kind} - event kind
   */
  DtwChangeEvent( Path aPath, WatchEvent.Kind<?> aKind ) {
    fsObj = aPath.toFile();
    if( aKind == ENTRY_CREATE ) {
      op = ECrudOp.CREATE;
    }
    else {
      if( aKind == ENTRY_DELETE ) {
        op = ECrudOp.REMOVE;
      }
      else {
        if( aKind == ENTRY_MODIFY ) {
          op = ECrudOp.EDIT;
        }
        else {
          throw new TsInternalErrorRtException();
        }
      }
    }
  }

  /**
   * Returns changed object of file system.
   *
   * @return {@link File} - changed directory or file
   */
  public File fsObj() {
    return fsObj;
  }

  /**
   * Returns the change kind.
   *
   * @return {@link ECrudOp} - the change kind
   */
  public ECrudOp op() {
    return op;
  }

  // ------------------------------------------------------------------------------------
  // Object
  //

  @Override
  public String toString() {
    return op.id() + ' ' + fsObj.getAbsolutePath();
  }

}
